import tkinter as tk
import random
from tkinter import messagebox


wordlist = ["apple", "banana", "orange", "grape", "watermelon", "kiwi", "mango", "pineapple","strawberry", "blueberry", "peach", "pear", "cherry", "plum", "raspberry", "lemon","lime", "coconut", "pomegranate", "apricot"]

hangman_stages = [
    """
     +---+
         |
         |
         |
        ===
    """,
    """
     +---+
     O   |
         |
         |
        ===
    """,
    """
     +---+
     O   |
     |   |
         |
        ===
    """,
    """
     +---+
     O   |
    /|   |
         |
        ===
    """,
    """
     +---+
     O   |
    /|\\  |
         |
        ===
    """,
    """
     +---+
     O   |
    /|\\  |
    /    |
        ===
    """,
    """
     +---+
     O   |
    /|\\  |
    / \\  |
        ===
    """
]


def update_word_display():
  word_display.set(" ".join(displayed_word))


def button_click():
  global remaining_attempts, guessed_letters
  guess = entry.get().lower()
  entry.delete(0,tk.END)
  if len(guess) ==1:
    if guess in chosen_word:
      for i in range(len(chosen_word)):
        if chosen_word[i] == guess:
          displayed_word[i] = guess
      update_word_display()
      guessed_letters.add(guess)
      if '_' not in displayed_word:
        messagebox.showinfo("hangman","You beat the game good job.")
        reset_game()
    else:
      remaining_attempts -=1
      update_hangman_image()
      if remaining_attempts == 0:
        messagebox.showinfo("hangman","You lost, better luck next time.")
        reset_game()
  else:
    if guess == chosen_word:
      messagebox.showinfo("hangman","You beat the game good job.")
      reset_game()
    else:
      remaining_attempts -=1
      update_hangman_image()
      if remaining_attempts == 0:
        messagebox.showinfo("hangman","You lost, better luck next time.")
        reset_game()

def reset_game():
  global chosen_word, displayed_word, remaining_attempts, guessed_letters
  chosen_word = random.choice(wordlist)
  displayed_word = ["_" for _ in chosen_word]
  remaining_attempts = 6
  guessed_letters = set()
  update_word_display()
  update_hangman_image()


def update_hangman_image():
  hangman_text.set(hangman_stages[6- remaining_attempts])


window = tk.Tk()

window.title("Hangman")

hangman_text = tk.StringVar()
hangman_text.set(hangman_stages[0])
hangman_label = tk.Label(window, textvariable=hangman_text,fg = "red",font =("Arial", 16))
hangman_label.pack()


word_display = tk.StringVar()
word_display_label = tk.Label(window, textvariable=word_display,fg = "blue", font =("Arial", 16))

word_display_label.pack()


entry_word = tk.StringVar()
entry = tk.Entry(window,textvariable=entry_word,font =("Arial", 16))
entry.pack()

button = tk.Button(window,text = "Guess", fg = "purple",command = button_click)
button.pack()

guessed_letters_label = tk.Label(window, text= "Guessed letters",font =("Arial", 16))
guessed_letters_label.pack()

reset_game()













window.mainloop()
